import com.worldmanager.gradle.tasks.TagVersion

buildscript {
    repositories {
        // mavenLocal() // for testing only
        // mavenCentral() // for testing only
        maven { url project.ext.get('mvn.repos.redlounge.url') }
        maven { url project.ext.get('mvn.repos.thirdparty.url') }
    }
    dependencies {
        classpath group: 'com.esyfur',       name: 'gradle-config-plugin', version: project.ext.get('plugin.config.version')
        classpath group: 'com.worldmanager', name: 'gradle-wm-plugin',     version: project.ext.get('plugin.wm.version')
    }
}

apply plugin: 'maven-publish'
apply plugin: 'signing'


def repoName = project.ext.get('scm.repo.name')
def repoUrl = wm.utils.isSnapshot() ? project.ext.get('publish.repos.snapshots.url') : project.ext.get('publish.repos.releases.url')

publishing {
    publications {
        main(MavenPublication) {
            // Only the fat JAR needs to be published
            from components.java

            version = wm.utils.composeVersion()

            pom {
                name = project.name
                description = project.description
                url = repoUrl
                inceptionYear = '2019'
                packaging = 'jar'
                licenses {
                    license {
                        name = project.ext.get('license.name')
                        url = project.ext.get('license.url')
                    }
                }
                scm {
                    url = repoUrl
                    connection = 'scm:git:' + sprintf(project.ext.get('scm.remote.url.fetch'), repoName)
                    developerConnection = 'scm:git:' + sprintf(project.ext.get('scm.remote.url.push'), repoName)
                }
                developers {
                    developer {
                        id = 'worldmanager'
                        name = 'World Manager IQ Division'
                        email = 'support@worldmanager.com'
                    }
                }
                organization {
                    name = 'World Manager'
                }
            }
        }
    }

    repositories {
        maven {
            name = "io.redlounge.hackwrench"
            url = repoUrl
            credentials {
                username = project.ext.get('publish.credentials.username')
                password = project.ext.get('publish.credentials.password')
            }
        }
    }
}

signing {
    sign publishing.publications.main
    required { !wm.utils.isSnapshot() && false }
}

task tagVersion(type: TagVersion)

task release {
    group 'Publishing'
    dependsOn tagVersion, publish
}

tasks.publish.mustRunAfter tagVersion

// TODO the upload will be removed when teamcity building step is updated to use `publish` task
task upload {
    group 'Publishing'
    dependsOn publish
}