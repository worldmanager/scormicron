apply plugin: 'java-library'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

if (getPlugins().hasPlugin('application') && (mainClassName == null)) {
    mainClassName = [group, name, 'Main'].join('.')
}

ext.javaLintArgs = [
        '-Xlint:all',
        '-Xlint:-deprecation',
        '-Xlint:-path',
        '-Xlint:-serial'
]

ext.sharedManifest = manifest {
    attributes (
        'Implementation-Title':   project.name,
        'Implementation-Version': wm.utils.composeVersion(),
        'Built-JDK':  System.getProperty('java.version'),
        'Built-By':   System.getProperty('user.name'),
        'Built-Date': new Date()
    )

    if (project.hasProperty('mainClassName'))
        attributes 'Main-Class': project.ext.mainApplicationClassName
}

task sourceJar(type: Jar) {
    group 'Build'
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    group 'Build'
    archiveClassifier = 'javadoc'
    from javadoc
}

jar {
    version = wm.utils.composeVersion()

    manifest = project.manifest { from sharedManifest }
    setDuplicatesStrategy(DuplicatesStrategy.INCLUDE)
}

javadocJar {
    setDuplicatesStrategy(DuplicatesStrategy.INCLUDE)
}

tasks.withType(JavaCompile) {
    options.incremental = true
    options.deprecation = false
    options.compilerArgs += project.javaLintArgs
}
